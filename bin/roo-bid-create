#!/usr/bin/env node
const path=require('path')
const userHome=require('user-home')
const exists = require('fs').existsSync
const inquirer=require('inquirer')
const download=require('download-git-repo')
const chalk=require('chalk')
const ora=require('ora')
const rm = require('rimraf').sync
const exec = require('child_process').execSync
const fetchTemplateList=require('../lib/fetch-template-list')
const generate=require('../lib/generate.js')

//本地模板存放仓库
const tmpRepo=path.resolve(userHome,'.roo-templates')
//获取模板列表
fetchTemplateList((templateList)=>{
  const choices=templateList.map(template=>{
    return {
      name:`${template.name} - ${template.description}`,
      value:template.name
    }
  })
  inquirer.prompt([{
    type:'list',
    name:'template',
    choices,
    message:'Choose template you want'
  }]).then(answer=>{
    //模板名称
    const templateName=answer.template
    //远程模板地址
    const templateUrl=templateList.find(template=>template.name===templateName).url
    const tmpDest=path.resolve(tmpRepo,templateName)
    if(exists(tmpDest)){
      inquirer.prompt([
        {
          type:'confirm',
          name:'override',
          message:'The template exists.Override?'
        }
      ]).then(answer=>{
        if(answer.override) {
          rm(tmpDest)
          downloadAndGenerate(templateName,templateUrl)
        }else{
          generate()
        }
      });
    }else{
      downloadAndGenerate(templateName,templateUrl)
    }  
  })
})

/**
 * 
 * @param {String} templateName 
 * @param {String} templateUrl 
 */
function downloadAndGenerate(templateName,templateUrl){
  const spinner=ora('downloading template')
  const tmpDest=path.resolve(tmpRepo,templateName)
  inquirer.prompt([{
    type:'input',
    name:'branch',
    message:'the name of branch you need',
    default:'master'
  }]).then(answer=>{
    spinner.start()
    download(`${templateUrl}#${answer.branch}`,tmpDest,{
      clone:false
    },(err)=>{
      if(err){
        spinner.fail(chalk.red('download template unsuccessfully'))
        console.log(err)
      }else{
        spinner.succeed(chalk.green('download template successfully'))
        generate()
      }
    })
  })
}

